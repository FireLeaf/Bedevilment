/* WARNING: This file has been autogenerated. Do not modify it directly! */

#ifndef XM_FACTORYFUNCTIONS_HPP
#define XM_FACTORYFUNCTIONS_HPP

namespace xm {

template
<
    typename ParamT0 = void,
    typename ParamT1 = void,
    typename ParamT2 = void,
    typename ParamT3 = void,
    typename ParamT4 = void,
    typename ParamT5 = void,
    typename ParamT6 = void,
    typename ParamT7 = void
>
Function functionSign(const std::string& name)
{
    return Function(name,
                    getType<void>(),
                    getType<ParamT0>(),
                    getType<ParamT1>(),
                    getType<ParamT2>(),
                    getType<ParamT3>(),
                    getType<ParamT4>(),
                    getType<ParamT5>(),
                    getType<ParamT6>(),
                    getType<ParamT7>());
}


template
<
    typename ClassT,
    typename ParamT0 = void,
    typename ParamT1 = void,
    typename ParamT2 = void,
    typename ParamT3 = void,
    typename ParamT4 = void,
    typename ParamT5 = void,
    typename ParamT6 = void
>
Method methodSign(const std::string& name)
{
    return Method(name,
                  getType<void>(),
                  getClass<ClassT>(),
                  getType<ParamT0>(),
                  getType<ParamT1>(),
                  getType<ParamT2>(),
                  getType<ParamT3>(),
                  getType<ParamT4>(),
                  getType<ParamT5>(),
                  getType<ParamT6>());
}

} // namespace xm

#endif /* XM_FACTORYFUNCTIONS_HPP */
